# Generated by Django 3.1.7 on 2021-03-24 11:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0010_offer_user'),
    ]

    operations = [
        migrations.AlterField(
            model_name='barcode',
            name='barcode',
            field=models.CharField(help_text='Штрихкод обязателен при размещении товара по модели FBY и FBY+. Допустимые форматы: EAN-13, EAN-8, UPC-A, UPC-E, Code 128. Для книг — ISBN-10 или ISBN-13. Для товаров определённых производителей передайте только код GTIN. Если штрихкодов несколько, укажите их через запятую.', max_length=255, null=True, verbose_name='Штрихкод'),
        ),
        migrations.AlterField(
            model_name='barcode',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='customscommoditycode',
            name='code',
            field=models.CharField(help_text='Укажите 10 или 14 цифр без пробелов.', max_length=10, null=True, verbose_name='Код ТН ВЭД'),
        ),
        migrations.AlterField(
            model_name='customscommoditycode',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customsCommodityCodes', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='manufacturercountry',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturerCountries', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='categoryId',
            field=models.PositiveSmallIntegerField(null=True, verbose_name='Идентификатор категории для текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='marketSku',
            field=models.PositiveSmallIntegerField(null=True, verbose_name='SKU на Яндексе — идентификатор текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='modelId',
            field=models.PositiveSmallIntegerField(help_text='Например, две лопатки разных цветов имеют разные SKU на Яндексе (параметр market_sku), но одинаковый идентификатор модели товара', null=True, verbose_name='Идентификатор модели для текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapping_set', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='boxCount',
            field=models.PositiveIntegerField(help_text='Если нет — оставьте поле пустым. Если да — укажите количество мест (например, кондиционер занимает 2 грузовых места — внешний и внутренний блоки в двух коробках).', null=True, verbose_name='Товар занимает больше одного места'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='category',
            field=models.CharField(max_length=255, null=True, verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='deliveryDurationDays',
            field=models.PositiveSmallIntegerField(help_text='За какое время вы поставите товар на склад.(в днях)', null=True, verbose_name='Срок поставки'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='manufacturer',
            field=models.CharField(help_text='Компания, которая произвела товар, ее адрес и регистрационный номер (если есть)', max_length=255, null=True, verbose_name='Изготовитель'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='marketSku',
            field=models.CharField(max_length=255, null=True, verbose_name='SKU на Яндексе'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='minShipment',
            field=models.PositiveSmallIntegerField(help_text='Минимальное количество товаров, которое вы готовы привозить на склад. Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, то ваша минимальная партия — 60 баночек.', null=True, verbose_name='Минимальная партия поставки'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='name',
            field=models.CharField(help_text='Составляйте по схеме: тип товара + бренд или производитель + модель + отличительные характеристики.', max_length=255, null=True, verbose_name='Название товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='quantumOfSupply',
            field=models.PositiveSmallIntegerField(help_text='По сколько товаров можно добавлять к минимальной партии. Например, вы планируете поставлять детское питание партиями, причем к минимальной партии хотите прибавлять минимум по 2 коробки, а в каждой коробке по 6 баночек. Тогда добавочная партия — 12 баночек, а к минимальной партии можно добавлять 12, 24, 36 баночек и т. д.', null=True, verbose_name='Добавочная партия'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='shopSku',
            field=models.CharField(max_length=255, null=True, verbose_name='Ваш SKU'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='transportUnitSize',
            field=models.PositiveSmallIntegerField(help_text='Сколько товаров в упаковке. Поле используется, если вы поставляете товар упаковками, а продаете поштучно. Например, вы продаете детское питание по 1 баночке, а коробка содержит 6 баночек.', null=True, verbose_name='Количество товаров в упаковке'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendor',
            field=models.CharField(max_length=255, null=True, verbose_name='Торговая марка'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendorCode',
            field=models.CharField(max_length=255, null=True, verbose_name='Артикул производителя'),
        ),
        migrations.AlterField(
            model_name='price',
            name='offer',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='price',
            name='vat',
            field=models.IntegerField(help_text='\n                   Идентификатор ставки НДС, применяемой для товара:\n                   2 — 10%.\n                   5 — 0%.\n                   6 — не облагается НДС.\n                   7 — 20%.\n                   Если параметр не указан, используется ставка НДС, установленная в личном кабинете магазина.\n                   ', null=True, verbose_name='Идентификатор ставки НДС'),
        ),
        migrations.AlterField(
            model_name='processingstate',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processingState_set', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='processingstate',
            name='status',
            field=models.CharField(choices=[('READY', 'товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену и создайте поставку на склад. Подробнее см. в разделе Загрузка каталога товаров, а также в разделе "Как поставить товары на склад" Справки Маркета для моделей FBY, FBY+ и FBS'), ('IN_WORK', 'товар проходит модерацию. Это занимает несколько дней'), ('NEED_CONTENT', 'для товара без SKU на Яндексе market_sku нужно найти карточку самостоятельно (через API или личный кабинет магазина) или создать ее, если товар еще не продается на Маркете'), ('NEED_INFO', 'товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре notes'), ('REJECTED', 'товар не прошел модерацию, так как Маркет не планирует размещать подобные товары'), ('SUSPENDED', 'товар не прошел модерацию, так как Маркет пока не размещает подобные товары'), ('OTHER', 'товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру')], help_text='Можно продавать или нет', max_length=12, null=True, verbose_name='Cтатус'),
        ),
        migrations.AlterField(
            model_name='supplyscheduledays',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplyScheduleDays', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='supplyscheduledays',
            name='supplyScheduleDay',
            field=models.CharField(choices=[('MONDAY', 'понедельник'), ('TUESDAY', 'вторник'), ('WEDNESDAY', 'среда'), ('THURSDAY', 'четверг'), ('FRIDAY', 'пятница'), ('SATURDAY', 'суббота'), ('SUNDAY', 'воскресенье')], help_text='Дни недели, когда вы готовы поставлять товары на склад маркетплейса. Заполняйте поле, чтобы получать рекомендации о пополнении товаров на складе.', max_length=9, null=True, verbose_name='Дни поставки'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='comment',
            field=models.CharField(help_text='Например: Хранить в сухом помещении', max_length=2000, null=True, verbose_name='Комментарий к сроку службы'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='offer',
            field=models.ForeignKey(help_text='Срок годности, срок службы, гарантийный срок', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timings', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timePeriod',
            field=models.PositiveSmallIntegerField(null=True, verbose_name='Срок службы'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timingType',
            field=models.PositiveSmallIntegerField(choices=[(0, 'shelf_life'), (1, 'life_time'), (2, 'guarantee_period')], help_text='Определяет, где в каком свойстве модели будет находиться свойство', null=True, verbose_name='Тип таймингового поля'),
        ),
        migrations.AlterField(
            model_name='url',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='url',
            name='url',
            field=models.URLField(max_length=2000, null=True, verbose_name='Сслыка на фото'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='height',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 20.0', null=True, verbose_name='Высота, см'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='length',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 65.55', null=True, validators=[django.core.validators.MinValueValidator(0.9), django.core.validators.MaxValueValidator(58)], verbose_name='Длина, см'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='offer',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weightDimensions', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='weight',
            field=models.FloatField(help_text='С учетом упаковки (брутто). Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 1.001', null=True, verbose_name='Вес в упаковке (брутто), кг'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='width',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 50.7', null=True, verbose_name='Ширина, см'),
        ),
    ]
