# Generated by Django 3.1.7 on 2021-03-25 20:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0011_auto_20210324_1436'),
    ]

    operations = [
        migrations.AlterField(
            model_name='barcode',
            name='barcode',
            field=models.CharField(blank=True, help_text='Штрихкод обязателен при размещении товара по модели FBY и FBY+. Допустимые форматы: EAN-13, EAN-8, UPC-A, UPC-E, Code 128. Для книг — ISBN-10 или ISBN-13. Для товаров определённых производителей передайте только код GTIN. Если штрихкодов несколько, укажите их через запятую.', max_length=255, null=True, verbose_name='Штрихкод'),
        ),
        migrations.AlterField(
            model_name='barcode',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='customscommoditycode',
            name='code',
            field=models.CharField(blank=True, help_text='Укажите 10 или 14 цифр без пробелов.', max_length=10, null=True, verbose_name='Код ТН ВЭД'),
        ),
        migrations.AlterField(
            model_name='customscommoditycode',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customsCommodityCodes', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='manufacturercountry',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Страна производства товара'),
        ),
        migrations.AlterField(
            model_name='manufacturercountry',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manufacturerCountries', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mapping_set', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='availability',
            field=models.CharField(blank=True, choices=[('ACTIVE', 'поставки будут'), ('INACTIVE', 'поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на DELISTED'), ('DELISTED', 'архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на INACTIVE.')], max_length=8, null=True, verbose_name='Планы по поставкам'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='boxCount',
            field=models.PositiveIntegerField(blank=True, help_text='Если нет — оставьте поле пустым. Если да — укажите количество мест (например, кондиционер занимает 2 грузовых места — внешний и внутренний блоки в двух коробках).', null=True, verbose_name='Товар занимает больше одного места'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='category',
            field=models.CharField(max_length=255, verbose_name='Категория'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='deliveryDurationDays',
            field=models.PositiveSmallIntegerField(blank=True, help_text='За какое время вы поставите товар на склад.(в днях)', null=True, verbose_name='Срок поставки'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='description',
            field=models.CharField(blank=True, max_length=2000, null=True, verbose_name='Описание товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='manufacturer',
            field=models.CharField(help_text='Компания, которая произвела товар, ее адрес и регистрационный номер (если есть)', max_length=255, verbose_name='Изготовитель'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='marketSku',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='SKU на Яндексе'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='minShipment',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Минимальное количество товаров, которое вы готовы привозить на склад. Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, то ваша минимальная партия — 60 баночек.', null=True, verbose_name='Минимальная партия поставки'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='name',
            field=models.CharField(help_text='Составляйте по схеме: тип товара + бренд или производитель + модель + отличительные характеристики.', max_length=255, verbose_name='Название товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='quantumOfSupply',
            field=models.PositiveSmallIntegerField(blank=True, help_text='По сколько товаров можно добавлять к минимальной партии. Например, вы планируете поставлять детское питание партиями, причем к минимальной партии хотите прибавлять минимум по 2 коробки, а в каждой коробке по 6 баночек. Тогда добавочная партия — 12 баночек, а к минимальной партии можно добавлять 12, 24, 36 баночек и т. д.', null=True, verbose_name='Добавочная партия'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='shopSku',
            field=models.CharField(max_length=255, verbose_name='Ваш SKU'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='transportUnitSize',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Сколько товаров в упаковке. Поле используется, если вы поставляете товар упаковками, а продаете поштучно. Например, вы продаете детское питание по 1 баночке, а коробка содержит 6 баночек.', null=True, verbose_name='Количество товаров в упаковке'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer', to='auth.user', verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendor',
            field=models.CharField(max_length=255, verbose_name='Торговая марка'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendorCode',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Артикул производителя'),
        ),
        migrations.AlterField(
            model_name='price',
            name='offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='price', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='processingstate',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processingState_set', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='supplyscheduledays',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplyScheduleDays', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='comment',
            field=models.CharField(blank=True, help_text='Например: Хранить в сухом помещении', max_length=2000, null=True, verbose_name='Комментарий к сроку службы'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='offer',
            field=models.ForeignKey(help_text='Срок годности, срок службы, гарантийный срок', on_delete=django.db.models.deletion.CASCADE, related_name='timings', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timePeriod',
            field=models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Срок службы'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timeUnit',
            field=models.CharField(blank=True, choices=[('HOUR', 'часы'), ('DAY', 'дни'), ('WEEK', 'недели'), ('MONTH', 'месяцы'), ('YEAR', 'годы')], max_length=5, null=True, verbose_name='Единица измерения срока годности'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timingType',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(0, 'shelf_life'), (1, 'life_time'), (2, 'guarantee_period')], help_text='Определяет, где в каком свойстве модели будет находиться свойство', null=True, verbose_name='Тип таймингового поля'),
        ),
        migrations.AlterField(
            model_name='url',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='url',
            name='url',
            field=models.URLField(max_length=2000, verbose_name='Сслыка на фото'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='height',
            field=models.FloatField(blank=True, help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 20.0', null=True, verbose_name='Высота, см'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='length',
            field=models.FloatField(blank=True, help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 65.55', null=True, validators=[django.core.validators.MinValueValidator(0.9), django.core.validators.MaxValueValidator(58)], verbose_name='Длина, см'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='offer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weightDimensions', to='main.offer'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='weight',
            field=models.FloatField(blank=True, help_text='С учетом упаковки (брутто). Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 1.001', null=True, verbose_name='Вес в упаковке (брутто), кг'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='width',
            field=models.FloatField(blank=True, help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 50.7', null=True, verbose_name='Ширина, см'),
        ),
    ]
