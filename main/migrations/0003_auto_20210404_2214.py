# Generated by Django 3.1.7 on 2021-04-04 19:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_auto_20210330_1613'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.PositiveIntegerField(null=True, verbose_name='Идентификатор региона доставки')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название региона доставки')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offerName', models.CharField(max_length=255, null=True, verbose_name='Название товара')),
                ('marketSku', models.PositiveIntegerField(null=True, verbose_name='SKU на Яндексе')),
                ('shopSku', models.CharField(max_length=255, null=True, verbose_name='SKU товара в нашем магазине')),
                ('count', models.PositiveIntegerField(help_text='Если из заказа удалены все единицы товара, он попадет только в список initialItems.', null=True, verbose_name='Количество единиц товара с учетом удаленных единиц')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(verbose_name='Идентификатор заказа')),
                ('creationDate', models.DateField(help_text='Формат даты: ГГГГ‑ММ‑ДД', null=True, verbose_name='Дата создания заказа')),
                ('status', models.CharField(choices=[('CANCELLED_BEFORE_PROCESSING', 'заказ отменен до начала его обработки'), ('CANCELLED_IN_DELIVERY', 'заказ отменен во время его доставки'), ('CANCELLED_IN_PROCESSING', 'заказ отменен во время его обработки'), ('DELIVERY', 'заказ передан службе доставки'), ('DELIVERED', 'заказ доставлен'), ('PARTIALLY_RETURNED', 'заказ частично возвращен покупателем'), ('PICKUP', 'заказ доставлен в пункт выдачи'), ('PROCESSING', 'заказ в обработке'), ('REJECTED', 'заказ создан, но не оплачен'), ('RETURNED', 'заказ полностью возвращен покупателем'), ('UNKNOWN', 'неизвестный статус заказа')], max_length=27, null=True, verbose_name='Текущий статус заказа')),
                ('statusUpdateDate', models.DateTimeField(help_text='Формат даты и времени: ISO 8601. Например, 2017-11-21T00:00:00. Часовой пояс — UTC+03:00 (Москва)', null=True, verbose_name='Дата и время, когда статус заказа был изменен в последний раз')),
                ('paymentType', models.CharField(choices=[('CREDIT', 'заказ оформлен в кредит'), ('POSTPAID', 'заказ оплачен после того, как был получен'), ('PREPAID', 'заказ оплачен до того, как был получен')], max_length=8, null=True, verbose_name='Тип оплаты заказа')),
                ('partnerOrderId', models.PositiveIntegerField(verbose_name='Идентификатор заказа партнера')),
                ('deliveryRegion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.deliveryregion', verbose_name='Информация о регионе доставки')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=255, null=True, verbose_name='Идентификатор денежного перевода')),
                ('date', models.DateField(help_text='Формат даты: ГГГГ‑ММ‑ДД', null=True, verbose_name='Дата денежного перевода')),
                ('type', models.CharField(choices=[('PAYMENT', 'оплата'), ('REFUND', 'возврат')], max_length=7, null=True, verbose_name='Тип денежного перевода')),
                ('source', models.CharField(choices=[('BUYER', 'оплата или возврат деньгами'), ('CASHBACK', 'оплата или возврат баллами кешбэка по подписке Яндекс Плюс'), ('MARKETPLACE', 'оплата или возврат Маркет Бонусами'), ('SPASIBO', 'оплата или возврат бонусами СберСпасибо')], max_length=11, null=True, verbose_name='Способ денежного перевода')),
                ('total', models.DecimalField(decimal_places=2, help_text='Значение указывается в рублях независимо от способа денежного перевода. Точность — два знака после запятой', max_digits=10, null=True, verbose_name='Сумма денежного перевода')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='main.order', verbose_name='Информация о денежных переводах по заказу')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_id', models.PositiveIntegerField(null=True, verbose_name='Идентификатор склада')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название склада')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_order_id', models.IntegerField(null=True, verbose_name='Номер платежного поручения')),
                ('date', models.DateField(help_text='Формат даты: ГГГГ‑ММ‑ДД', null=True, verbose_name='Дата платежного поручения')),
                ('payment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paymentOrder', to='main.payment', verbose_name='Информация о платежном поручении')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('BUYER', 'цена на товар с учетом скидок, в том числе Маркет Бонусов и бонусов СберСпасибо'), ('CASHBACK', 'баллы кешбэка по подписке Яндекс Плюс'), ('MARKETPLACE', 'Маркет Бонусы'), ('SPASIBO', 'бонусы СберСпасибо')], max_length=11, null=True, verbose_name='Тип скидки или цена на товар')),
                ('costPerItem', models.DecimalField(decimal_places=2, help_text='Указана в рублях. Точность — два знака после запятой', max_digits=10, null=True, verbose_name='Цена или скидка на единицу товара в заказе')),
                ('total', models.DecimalField(decimal_places=2, help_text='Указана в рублях. Точность — два знака после запятой', max_digits=10, null=True, verbose_name='Суммарная цена или скидка на все единицы товара в заказе')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='main.item', verbose_name='Цена или скидки на товар')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='order',
            field=models.ForeignKey(help_text='В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя. Если из заказа удалены все единицы товара, его не будет в списке items — только в списке initialItems. Если в заказе осталась хотя бы одна единица товара, он будет и в списке items (с уменьшенным количеством единиц count), и в списке initialItems (с первоначальным количеством единиц initialCount).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.order', verbose_name='Список товаров в заказе после возможных изменений'),
        ),
        migrations.AddField(
            model_name='item',
            name='warehouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.warehouse', verbose_name='Информация о складе, на котором хранится товар'),
        ),
        migrations.CreateModel(
            name='InitialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offerName', models.CharField(max_length=255, null=True, verbose_name='Название товара')),
                ('marketSku', models.PositiveIntegerField(null=True, verbose_name='SKU на Яндексе')),
                ('shopSku', models.CharField(max_length=255, null=True, verbose_name='SKU товара в нашем магазине')),
                ('initialCount', models.PositiveIntegerField(null=True, verbose_name='Первоначальное количество единиц товара')),
                ('order', models.ForeignKey(help_text='В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя. Если из заказа удалены все единицы товара, его не будет в списке items — только в списке initialItems. Если в заказе осталась хотя бы одна единица товара, он будет и в списке items (с уменьшенным количеством единиц count), и в списке initialItems (с первоначальным количеством единиц initialCount).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initialItems', to='main.order', verbose_name='Список товаров в заказе до изменений')),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemStatus', models.CharField(choices=[('REJECTED', 'товар был добавлен в созданный заказ, но не был оплачен'), ('RETURNED', 'товар вернули')], max_length=8, null=True, verbose_name='Статус товара')),
                ('itemCount', models.PositiveIntegerField(null=True, verbose_name='Количество товара со статусом, указанном в параметре itemStatus')),
                ('updateDate', models.DateField(help_text='Формат даты: ГГГГ‑ММ‑ДД', null=True, verbose_name='Дата, когда товар получил статус, указанный в параметре itemStatus')),
                ('stockType', models.CharField(choices=[('DEFECT', 'товар бракованный'), ('FIT', 'товар надлежащего качества')], max_length=6, null=True, verbose_name='Тип товара')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='details', to='main.item', verbose_name='Информация об удалении товара из заказа')),
            ],
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('AGENCY', 'прием и перечисление денег от покупателя (агентское вознаграждение)'), ('FEE', 'комиссия за размещение товара на Маркете'), ('FULFILLMENT', 'комиссия за хранение товара на складе Маркета')], max_length=11, null=True, verbose_name='Тип комиссии')),
                ('actual', models.DecimalField(decimal_places=2, help_text='Точность — два знака после запятой', max_digits=10, null=True, verbose_name='Сумма комиссии в рублях, которая была выставлена в момент создания заказа и которую нужно оплатить')),
                ('predicted', models.DecimalField(decimal_places=2, help_text='Точность — два знака после запятой', max_digits=10, null=True, verbose_name='Сумма комиссии в рублях, которая была бы выставлена, если бы заказ был создан в момент формирования отчета по заказам')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='main.order', verbose_name='Информация о комиссиях за заказ')),
            ],
        ),
    ]
