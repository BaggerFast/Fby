# Generated by Django 3.1.6 on 2021-02-23 20:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_auto_20210216_1611'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='offer',
            name='barcodes',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='customs_commodity_codes',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='manufacturer_countries',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='mappings',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='processing_states',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='supply_schedule_days',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='timings',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='urls',
        ),
        migrations.RemoveField(
            model_name='offer',
            name='weight_dimensions',
        ),
        migrations.RemoveField(
            model_name='processingstate',
            name='notes',
        ),
        migrations.AddField(
            model_name='barcode',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='barcodes', to='main.offer', verbose_name='Штрихкоды товара'),
        ),
        migrations.AddField(
            model_name='customscommoditycode',
            name='offer',
            field=models.ForeignKey(help_text='Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД), если товар подлежит особому учету (например, в системе "Меркурий" как продукция животного происхождения или в системе "Честный ЗНАК"). Может содержать только один вложенный код ТН ВЭД.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customs_commodity_code', to='main.offer', verbose_name='Список кодов товара в единой ТН ВЭД'),
        ),
        migrations.AddField(
            model_name='manufacturercountry',
            name='offer',
            field=models.ForeignKey(help_text='Содержит от одной до 5 стран', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturer_countries', to='main.offer', verbose_name='Список стран, в которых произведен товар'),
        ),
        migrations.AddField(
            model_name='mapping',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapping', to='main.offer', verbose_name='Привязки карточек на Я.Маркете'),
        ),
        migrations.AddField(
            model_name='processingstate',
            name='offer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processing_state', to='main.offer', verbose_name='История статусов публикации товара на Маркете'),
        ),
        migrations.AddField(
            model_name='processingstatenote',
            name='processing_state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='main.processingstate', verbose_name='Причины, по которым товар не прошел модерацию'),
        ),
        migrations.AddField(
            model_name='timing',
            name='offer',
            field=models.ForeignKey(help_text='Срок годности, срок службы, гарантийный срок', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timing', to='main.offer', verbose_name='Тайминги товара'),
        ),
        migrations.AddField(
            model_name='url',
            name='offer',
            field=models.ForeignKey(help_text='страниц с описанием товара на вашем сайте; фотографий товара в хорошем качестве. Содержит хотя бы один URL', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='main.offer', verbose_name='Список URL'),
        ),
        migrations.AddField(
            model_name='weightdimension',
            name='offer',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weight_dimensions', to='main.offer', verbose_name='Габариты упаковки и вес товара'),
        ),
        migrations.AlterField(
            model_name='barcode',
            name='barcode',
            field=models.CharField(max_length=255, null=True, verbose_name='Штрихкод товара'),
        ),
        migrations.AlterField(
            model_name='customscommoditycode',
            name='code',
            field=models.CharField(help_text='Формат кода: 10 цифр без пробелов', max_length=10, null=True, verbose_name='Код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД)'),
        ),
        migrations.AlterField(
            model_name='manufacturercountry',
            name='name',
            field=models.CharField(max_length=255, null=True, verbose_name='Страна производства товара'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='category_id',
            field=models.IntegerField(null=True, verbose_name='Идентификатор категории для текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='mapping_type',
            field=models.CharField(choices=[('BASE', 'Информация о текущей карточке товара на Маркете'), ('AWAITING_MODERATION', 'Информация о карточке товара на Маркете, проходящей модерацию для данного товара'), ('REJECTED', 'Информация о последней карточке товара на Маркете, отклоненной на модерации для данного товара')], max_length=19, null=True, verbose_name='Тип маппинга'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='market_sku',
            field=models.IntegerField(null=True, verbose_name='SKU на Яндексе — идентификатор текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='mapping',
            name='model_id',
            field=models.IntegerField(help_text='Например, две лопатки разных цветов имеют разные SKU на Яндексе (параметр market_sku), но одинаковый идентификатор модели товара', null=True, verbose_name='Идентификатор модели для текущей карточки товара на Маркете'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='availability',
            field=models.CharField(choices=[('ACTIVE', 'поставки будут'), ('INACTIVE', 'поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на DELISTED'), ('DELISTED', 'архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на INACTIVE.')], max_length=8, null=True, verbose_name='Планы по поставкам'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='box_count',
            field=models.IntegerField(help_text='Например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках', null=True, verbose_name='Сколько мест (если больше одного) занимает товар'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='category',
            field=models.CharField(max_length=255, null=True, verbose_name='Категория товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='certificate',
            field=models.CharField(help_text='Документ по его номеру можно найти в личном кабинете магазина', max_length=255, null=True, verbose_name='Номер документа на товар'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='delivery_duration_days',
            field=models.IntegerField(null=True, verbose_name='Срок, за который вы поставляете товары на склад, в днях'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='description',
            field=models.CharField(max_length=2000, null=True, verbose_name='Описание товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='manufacturer',
            field=models.CharField(help_text='Компания, которая произвела товар, ее адрес и регистрационный номер (если есть)', max_length=255, null=True, verbose_name='Изготовитель товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='min_shipment',
            field=models.IntegerField(help_text='Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, значение равно 60', null=True, verbose_name='Минимальное количество единиц товара, которое вы поставляете на склад'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='name',
            field=models.CharField(max_length=255, null=True, verbose_name='Название товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='quantum_of_supply',
            field=models.IntegerField(help_text='Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, значение равно 12.', null=True, verbose_name='Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству min_shipment'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='shop_sku',
            field=models.CharField(max_length=255, null=True, verbose_name='SKU товара в нашем магазине'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='transport_unit_size',
            field=models.IntegerField(help_text='Например, если вы поставляете детское питание коробками по 6 баночек, значение равно 6', null=True, verbose_name='Количество единиц товара в одной упаковке, которую вы поставляете на склад'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendor',
            field=models.CharField(max_length=255, null=True, verbose_name='Бренд товара'),
        ),
        migrations.AlterField(
            model_name='offer',
            name='vendor_code',
            field=models.CharField(max_length=255, null=True, verbose_name='Артикул товара от производителя'),
        ),
        migrations.AlterField(
            model_name='processingstate',
            name='status',
            field=models.CharField(choices=[('READY', 'товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену и создайте поставку на склад. Подробнее см. в разделе Загрузка каталога товаров, а также в разделе "Как поставить товары на склад" Справки Маркета для моделей FBY, FBY+ и FBS'), ('IN_WORK', 'товар проходит модерацию. Это занимает несколько дней'), ('NEED_CONTENT', 'для товара без SKU на Яндексе market_sku нужно найти карточку самостоятельно (через API или личный кабинет магазина) или создать ее, если товар еще не продается на Маркете'), ('NEED_INFO', 'товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре notes'), ('REJECTED', 'товар не прошел модерацию, так как Маркет не планирует размещать подобные товары'), ('SUSPENDED', 'товар не прошел модерацию, так как Маркет пока не размещает подобные товары'), ('OTHER', 'товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру')], max_length=12, null=True, verbose_name='Статус публикации товара'),
        ),
        migrations.AlterField(
            model_name='processingstatenote',
            name='note_type',
            field=models.CharField(choices=[('ASSORTMENT', 'товар производится в разных вариантах. Каждый из них нужно описать как отдельный товар'), ('CANCELLED', 'товар отозван с модерации по вашей инициативе'), ('CONFLICTING_INFORMATION', 'вы предоставили потиворечивую информацию о товаре. Параметры, которые нужно исправить, указаны в параметре payload'), ('DEPARTMENT_FROZEN', 'правила размещения товаров в данной категории перерабатываются, поэтому товар пока не может пройти модерацию'), ('INCORRECT_INFORMATION', 'информация о товаре, которую вы предоставили, противоречит описанию от производителя. Параметры, которые нужно исправить, указаны в параметре payload'), ('LEGAL_CONFLICT', 'товар не прошел модерацию по юридическим причинам. Например, он официально не продается в России или у вас нет разрешения на его продажу'), ('NEED_CLASSIFICATION_INFORMATION', 'информации о товаре, которую вы предоставили, не хватает, чтобы отнести его к категории. Проверьте, что правильно указали название, категорию, производителя и страны производства товара, а также URL изображений или страниц с описанием, по которым можно идентифицировать товар'), ('NEED_INFORMATION', 'товар раньше не продавался в России и пока не размещается на Маркете. Для него можно создать карточку'), ('NEED_PICTURES', 'для идентификации товара нужны его изображения'), ('NEED_VENDOR', 'неверно указан производитель товара'), ('NO_CATEGORY', 'товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию'), ('NO_KNOWLEDGE', 'товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию'), ('NO_PARAMETERS_IN_SHOP_TITLE', 'товар производится в разных вариантах, и из указанного названия непонятно, о каком идет речь. Параметры, которые нужно добавить в название товара, указаны в параметре payload'), ('NO_SIZE_MEASURE', 'для этого товара нужна размерная сетка. Отправьте ее в службу поддержки или вашему менеджеру. Требования к размерной сетке указаны в параметре payload'), ('UNKNOWN', 'товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру')], max_length=31, null=True, verbose_name='Тип причины, по которой товар не прошел модерацию'),
        ),
        migrations.AlterField(
            model_name='processingstatenote',
            name='payload',
            field=models.CharField(help_text='Возвращается, если параметр type имеет одно из следующих значений: CONFLICTING_INFORMATION, INCORRECT_INFORMATION, NO_PARAMETERS_IN_SHOP_TITLE, NO_SIZE_MEASURE.', max_length=2000, null=True, verbose_name='Дополнительная информация о причине отклонения товара'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='comment',
            field=models.CharField(help_text='Например: Хранить в сухом помещении', max_length=2000, null=True, verbose_name='Дополнительные условия использования в течение срока годности'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='time_period',
            field=models.BigIntegerField(null=True, verbose_name='Срок годности в единицах, указанных в параметре time_unit'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='time_unit',
            field=models.CharField(choices=[('HOUR', 'часы'), ('DAY', 'дни'), ('WEEK', 'недели'), ('MONTH', 'месяцы'), ('YEAR', 'годы')], max_length=5, null=True, verbose_name='Единица измерения срока годности'),
        ),
        migrations.AlterField(
            model_name='timing',
            name='timing_type',
            field=models.IntegerField(choices=[(0, 'shelf_life'), (1, 'life_time'), (2, 'guarantee_period')], help_text='Определяет, где в каком свойстве модели будет находиться свойство', null=True, verbose_name='Тип таймингового поля'),
        ),
        migrations.AlterField(
            model_name='url',
            name='url',
            field=models.CharField(max_length=2000, null=True, verbose_name='URL изображения или страницы с описанием товара'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='height',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 20.0', null=True, verbose_name='Высота упаковки в сантиметрах'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='length',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 65.55', null=True, verbose_name='Длина упаковки в сантиметрах'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='weight',
            field=models.FloatField(help_text='С учетом упаковки (брутто). Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 1.001', null=True, verbose_name='Вес товара в килограммах'),
        ),
        migrations.AlterField(
            model_name='weightdimension',
            name='width',
            field=models.FloatField(help_text='Значение с точностью до тысячных, разделитель целой и дробной части — точка. Пример: 50.7', null=True, verbose_name='Ширина упаковки в сантиметрах'),
        ),
        migrations.CreateModel(
            name='SupplyScheduleDays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_schedule_day', models.CharField(choices=[('MONDAY', 'понедельник'), ('TUESDAY', 'вторник'), ('WEDNESDAY', 'среда'), ('THURSDAY', 'четверг'), ('FRIDAY', 'пятница'), ('SATURDAY', 'суббота'), ('SUNDAY', 'воскресенье')], max_length=9, null=True, verbose_name='День недели, в который вы поставляете товары на склад')),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supply_schedule_days', to='main.offer', verbose_name='')),
            ],
        ),
    ]
